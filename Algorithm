프론트엔드
3개의 언어를 사용

1. HTML
ex) <제목>NAVER</제목>
	<입력창/>
	<입력창/>
	<버튼>로그인<버튼/>
	
	->뼈대 마크업언어

2. CSS
ex) 제목 초록색
	배경 회색
	입력 창 흰색
	버튼 초록색
	...
	
	-> 꾸밀 수 있음 마크업언어

3. JavaScript
ex) 아이디 미입력 시 표시
	로그인 성공 시, 페이지 전환
	로그인 실패 시, 화면에 표시
	
	-> 로직
	
백엔드
대부분 프레임워크로 발달 되어 있음

프레임워크란?
-> 어떠한 목적을 달성하기 위해 복잡하게 얽혀있는 문제를 해결하기 위한 구조를 뜻한다

자바 = 스프링
파이썬 = 장고
...             

DB(데이터 베이스)

1. SQLite
2. MySQL
3. OPACLE
4. PostgerSQL
-> 관계형 DB


C언어로 쉽게 풀어쓴 자료구조

1_자료구조와 알고리즘

1_1자료구조와 알고리즘

알고리즘(algorithm)
입ㆍ력 : 0개 이상의 입력이 존재하여야 한다.
출ㆍ력 : 1개 이상의 출력이 존재하여야 한다.
명백성 : 각 명령어의 의미는 모호하지 않고 명확해야 한다.
유한성 : 한정된 수의 단게 후에는 반드시 종료되어야 한다.
유효성 : 각 명령어들은 종이와 연필, 또는 컴퓨터로 살행 가능한 연산이어야 한다.

algorithm을 기술하기 위한 방법
자연어(한글 영어 등)
흐름도(flowchart)
의사코드(pseudo-code)
프로그래밍 언어(programmimg langauge)

자료구조(data struture)
-> 자료들을 정리하여 보관하는 여러가지 구조들

일상생활에서의 예와 해당하는 자료구조들

버킷 리스트 -> 리스트(list)
영어사전 -> 사전

- 선형 구조
그릇을 쌓아서 보관하는것 -> 스택(stack)
마트 계산대의 줄 -> 큐(queue)

- 비선형 구조
지도 -> 그래프(graph)
컴퓨터 디렉토리 구조 -> 트리(tree)

program = data structure + algorithm
대부분 program에서 data를 처리하고 있고 이들 data는 data structure를 사용하여 저장된다.
또한 주어진 문제를 처리하는 절차가 필요한데, 이것을 algorithm이라고 한다.

#define MAX_ELEMENTS 100

int scores[MAX_ELEMENTS]; // data structrue

int get_max_score(int n) // 학생의 숫자는 n
{
	int i, Largest;
	Latgest = scores[0]; // algorithm
	for (i = 1; i < n; i++){
		if (scores[i] > Lagest){
			lagest = scores[i];
		}	
	}
	return 0;
}

algorithm 1.1 
- array에서 최대값을 찾는 algorithm을 pseudo-code로 표현한 예

ArrayMax(list, N);
	largest <- list[0]
	for i <- 1 to N - 1 do
		if list[i] > lagest
			then largest <- list[i]
	return lagest
	
1_2 추상 자료형

자료형(data type)
- 기초 자료형 : char, int, float, double
- 파생 자료형 : array([ ]), pointer(*)
- 사용자 정의 자료형 : 구조체, 공용체, 열거형

int 자료형
- 데이터(data) : {-INT_MIN, ..., -2, -1, 0, 1, 2, ..., INT_MAX }
- 연산(operation) : +, -, *, /, %, ==, >, <

복잡한 data type을 구현할 때는 operation이 연산자가 아니고 함수(function)로 작성된다.
"stack" 라는 data type에서 새로운 값을 추가하는 operation은 add()라는 function으로 정의된다.

추상자료형(ADT: abstract data type)이란 추상적, 수학적으로 data tpye을 정의한 것이다.

추상화(abstraction)
abstraction란?
어떤 system의 간략화된 기술 또는 명세로서 system의 정말 핵심적인 구조나 동작에만 집중하는 것이다.

정보은닉기법(imformation hiding)

ADT에서는 data나 operation이 무엇(what)인지는 정의 되지만 data나 operation을 어떻게(how) 컴퓨터 상에서구현할 것인지는 정의되지 않는다.

ADT : Nat_Number
객체 : 0에서 시작하여 INT_MAX까지의 순서화된 정수의 부분범위
함수 :
Nat_Number zero()
Nat_Number successor(x)

Boolean is_zero(x)

Boolean equal(x,y)

Nat_Number add(x,y)

Nat_Number sup(x,y)